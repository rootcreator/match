services:
  db:
    image: postgres:15
    container_name: match-db
    restart: always
    environment:
      POSTGRES_DB: matchdb
      POSTGRES_USER: matchuser
      POSTGRES_PASSWORD: matchpass123
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U matchuser -d matchdb"]
      interval: 5s
      retries: 5
      start_period: 10s
    volumes:
      - match_pgdata:/var/lib/postgresql/data
    networks:
      - internal_network

  web:
    build: .
    container_name: match-web
    restart: always
    command: gunicorn match.wsgi:application --bind 0.0.0.0:8006
    volumes:
      - match_static_volume:/app/static
      - match_media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: match.settings
      POSTGRES_DB: matchdb
      POSTGRES_USER: matchuser
      POSTGRES_PASSWORD: matchpass123
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      VIRTUAL_HOST: m.pluggedspace.org
      VIRTUAL_PORT: 8006
      LETSENCRYPT_HOST: m.pluggedspace.org
      LETSENCRYPT_EMAIL: contact@pluggedspace.org
    ports:
      - "8006:8006"
    networks:
      - internal_network
      - nginx-proxy-net

  bot:
    build: .
    container_name: match-bot
    restart: always
    command: python manage.py runbot
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started
    environment:
      DJANGO_SETTINGS_MODULE: match.settings
      POSTGRES_DB: matchdb
      POSTGRES_USER: matchuser
      POSTGRES_PASSWORD: matchpass123
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    networks:
      - internal_network

networks:
  internal_network:
    driver: bridge
  nginx-proxy-net:
    external: true

volumes:
  match_pgdata:
  match_static_volume:
  match_media_volume: